version: '3.4'

x-client: &client
 image: ethereum/client-go:latest
 depends_on:
   - lightserver
 entrypoint:
   - geth
   - --nousb
   - --nodiscover
   - --syncmode=light
   - --rpc
   - --rpcapi=les,eth,admin,web3
   - --rpcport=9444
   - --rpcaddr=0.0.0.0
   - --rpcvhosts=*
   - --networkid=$NETWORKID
 environment:
   - NETWORKID
 expose:
   - 9444
 networks:
   - light_network

services:
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    environment:
      - INFLUXDB_DB=metrics
      - INFLUXDB_ADMIN_USERNAME=admin
      - INFLUXDB_ADMIN_PASSWORD=password
    expose:
      - 8086
    networks:
      - light_network
  lightserver:
    image: ethereum/client-go:latest
    container_name: lightserver
    depends_on:
      - influxdb
    entrypoint:
      - geth
      - --metrics
      - --metrics.influxdb
      - --metrics.influxdb.endpoint=http://influxdb:8086
      - --metrics.influxdb.username=admin
      - --metrics.influxdb.password=password
      - --metrics.influxdb.database=metrics
      - --lightserv=100
      - --nousb
      - --syncmode=fast
      - --rpc
      - --rpcapi=les,admin,eth,web3
      - --rpcport=8444
      - --rpcaddr=0.0.0.0
      - --rpcvhosts=*
      - --networkid=$NETWORKID
    expose:
      - 8444
    ports:
      - "8444:8444"
    networks:
      - light_network
    environment:
      - NETWORKID
  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - influxdb
      - lightserver
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "3000:3000"
    networks:
      - light_network

  client_1:
    <<: *client
    container_name: client_1
    ports:
      - "9444:9444"
  client_2:
    <<: *client
    container_name: client_2
  client_3:
    <<: *client
    container_name: client_3
  client_4:
    <<: *client
    container_name: client_4
  client_5:
    <<: *client
    container_name: client_5
  client_6:
    <<: *client
    container_name: client_6
  client_7:
    <<: *client
    container_name: client_7
  client_8:
    <<: *client
    container_name: client_8
  client_9:
    <<: *client
    container_name: client_9
  client_10:
    <<: *client
    container_name: client_10

  spam:
    depends_on:
      - lightserver
      - client_1
      - client_2
      - client_3
      - client_4
      - client_5
      - client_6
      - client_7
      - client_8
      - client_9
      - client_10
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - light_network

networks:
  light_network:
    driver: overlay
